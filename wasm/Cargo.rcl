let root = import "//Cargo.rcl";

{
  package =
    root.package
    | {
      name = "rcl-wasm",
      description = "WASM entry points for RCL functionality.",
    },

  lib = { crate-type = ["cdylib"] },

  dependencies = {
    wasm-bindgen = {
      version = "=0.2.89",
      default-features = false,
      features = ["std"],
    },
    rcl = {
      path = "..",
    },
  },

  // These crates are needed for the build-std feature. We don't normally need
  // them, RCL does not depend on them, but when we build as part of the Nix flake,
  // all dependencies are fetched from the lockfile ahead of time, so we need to
  // have these crates in the lockfile. See also [1].
  // [1]: https://n8henrie.com/2023/09/compiling-rust-for-the-esp32-with-nix/
  target = {
    "cfg(wasm)": {
      dev-dependencies = {
        allocator-api2 = "=0.2.15",
        compiler_builtins = "=0.1.103",
        dlmalloc = "=0.2.4",
        fortanix-sgx-abi = "=0.5.0",
        getopts = "=0.2.21",
        hashbrown = "=0.14.2",
        hermit-abi = "= 0.3.2",
        libc = "=0.2.150",
        r-efi = "=4.2.0",
        r-efi-alloc = "=1.0.0",
        rustc-demangle = "=0.1.23",
        unicode-width = "=0.1.10",
        wasi = "=0.11.0",
      },
    },
  },
}
